# Generated by Django 3.0.6 on 2020-05-26 18:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(default='-', max_length=200, verbose_name='Группа')),
                ('course', models.CharField(default='-', max_length=2, verbose_name='Курс')),
                ('direction', models.CharField(max_length=200, null=True, verbose_name='Специальность')),
            ],
            options={
                'verbose_name': 'Группы',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=300, verbose_name='Предмет')),
                ('teacher', models.CharField(max_length=200, verbose_name='Преподаватель')),
                ('course', models.IntegerField(verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Предметы',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=200, verbose_name='Почта')),
                ('telephone', models.CharField(max_length=12, verbose_name='Телефон')),
                ('FIO', models.CharField(max_length=200, verbose_name='ФИО')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='CMSWeb.Groups', verbose_name='Группа')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=3, verbose_name='Оценка')),
                ('reporting_form', models.CharField(choices=[('exam', 'Экзамен'), ('offset', 'Зачет')], max_length=20, verbose_name='Форма отчетности')),
                ('date', models.DateField(null=True, verbose_name='Дата')),
                ('FIO', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='ФИО студента')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='CMSWeb.Groups', verbose_name='Группа')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='CMSWeb.Subject', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Успеваемость',
                'verbose_name_plural': 'Успеваемость',
            },
        ),
    ]
